<div id="container-myChart-block" class="debug-container-analytics">
    <h4><?php echo $this->__('Block'); ?></h4>
    <canvas id="myChart-block" width="170" height="170"></canvas>
</div>
<div id="container-myChart-model" class="debug-container-analytics">
    <h4><?php echo $this->__('Model'); ?></h4>
    <canvas id="myChart-model" width="170" height="170"></canvas>
</div>

<script>
    //<![CDATA[
    var ctxBlock = document.getElementById("myChart-block").getContext("2d");
    var ctxModel = document.getElementById("myChart-model").getContext("2d");

    var options = {
        //Boolean - Whether we should show a stroke on each segment
        segmentShowStroke : true,

        //String - The colour of each segment stroke
        segmentStrokeColor : "#fff",

        //Number - The width of each segment stroke
        segmentStrokeWidth : 2,

        //Number - The percentage of the chart that we cut out of the middle
        percentageInnerCutout : 50, // This is 0 for Pie charts

        //Number - Amount of animation steps
        animationSteps : 100,

        //String - Animation easing effect
        animationEasing : "easeOutBounce",

        //Boolean - Whether we animate the rotation of the Doughnut
        animateRotate : true,

        //Boolean - Whether we animate scaling the Doughnut from the centre
        animateScale : false,
        legend: {
            horizontalAlignment: 'center',
            verticalAlignment: 'bottom'
        },
        //String - A legend template
        legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\" class=\"picto-<%=name.toLowerCase()%>-legend\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
    };

    var myChartBlock = new Chart(ctxBlock).Doughnut(generateObjectDatas(<?php echo json_encode($this->getResume('Block')); ?>),options);
    var myChartModel = new Chart(ctxModel).Doughnut(generateObjectDatas(<?php echo json_encode($this->getResume('Model')); ?>),options);

    var legendBlock = myChartBlock.generateLegend();
    var legendModel = myChartModel.generateLegend();

    //and append it to your page somewhere
    $('container-myChart-block').insert(legendBlock);
    $('container-myChart-model').insert(legendModel);

    function randomColor(brightness){
        function randomChannel(brightness){
            var r = 255-brightness;
            var n = 0|((Math.random() * r) + brightness);
            var s = n.toString(16);
            return (s.length==1) ? '0'+s : s;
        }
        return '#' + randomChannel(brightness) + randomChannel(brightness) + randomChannel(brightness);
    }
    function generateObjectDatas(dataBrut){
        var datas = [];

        for(var key in dataBrut){
            var data = {};
            data.color = randomColor(50);
            data.highlight = '#9e9e9e';
            data.value = dataBrut[key];
            data.label = key;
            datas.push(data);
        }
        console.log(datas);
        return datas;
    }
    //]]>
</script>